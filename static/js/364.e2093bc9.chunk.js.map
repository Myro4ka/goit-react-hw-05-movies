{"version":3,"file":"static/js/364.e2093bc9.chunk.js","mappings":"uPAEaA,E,OAAMC,GAAAA,IAAH,o2C,SCwFhB,EA9EsB,WAAO,IAAD,MAC1B,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaL,GAASM,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC5BR,EAASQ,EACV,GACF,GAAE,CAACP,IAEJ,IAAQQ,EACNV,EADMU,MAAOC,EACbX,EADaW,YAAaC,EAC1BZ,EAD0BY,OAAQC,EAClCb,EADkCa,aAAcC,EAChDd,EADgDc,SAAUC,EAC1Df,EAD0De,aAEtDC,EAAe,IAAIC,KAAKJ,GAAcK,cAE5C,OACE,UAACrB,EAAD,YACE,SAAC,KAAD,CAAMsB,GAAE,UAAEf,EAASgB,aAAX,aAAE,EAAgBC,KAAMC,UAAU,WAA1C,6BAIA,iBAAKA,UAAU,gBAAf,WACE,gBAAKC,KAAKC,EAAAA,EAAAA,GAAOb,GAAcc,IAAKf,KACpC,iBAAKY,UAAU,kBAAf,WACE,0BACGZ,EADH,KACYM,EADZ,QAGA,cAAGM,UAAU,WAAb,SAAyBR,IACxBD,GACC,eAAGS,UAAU,aAAb,yBAAuCP,KACrC,KAEG,OAANH,QAAM,IAANA,GAAAA,EAAQc,QACP,4BACE,cAAGJ,UAAU,aAAb,qBACA,eAAIA,UAAU,SAAd,SACGV,EAAOe,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACjB,OACE,eAAaP,UAAU,QAAvB,UACE,uBAAIO,KADGD,EAIZ,SAGH,MACJ,4BACE,cAAGN,UAAU,aAAb,qCACA,gBAAIA,UAAU,QAAd,WACE,yBACE,SAAC,KAAD,CACEH,GAAI,OACJC,MAAO,CAAEC,KAAI,UAAEjB,EAASgB,aAAX,aAAE,EAAgBC,MAC/BC,UAAU,OAHZ,qBAQF,yBACE,SAAC,KAAD,CACEH,GAAI,UACJC,MAAO,CAAEC,KAAI,UAAEjB,EAASgB,aAAX,aAAE,EAAgBC,MAC/BC,UAAU,UAHZ,oCAYV,SAAC,EAAAQ,SAAD,WACE,SAAC,KAAD,QAIP,C,oKCtFKC,EAAU,gCACVC,EAAU,2CAEHC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA0CC,GAClD,EAEYzB,EAAe,SAAAqB,GAC1B,OAAOM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BH,EAA7B,YAAmCI,GAC3C,EAEYG,EAAkB,SAAAP,GAC7B,OAAOM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BH,EAA7B,oBAA2CI,GACnD,EAEYI,EAAe,SAAAR,GAC1B,OAAOM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BH,EAA7B,oBAA2CI,GACnD,EAEYK,EAAY,SAAAC,GACvB,OAAOJ,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wBAAoCC,EAApC,kBAAqDM,GAC7D,C,sDCrBM,SAASd,EAAOI,GACrB,OAAOA,EAAE,UAHM,mCAGN,OACSA,GACd,6FACL,C","sources":["pages/MoviesDetails/MoviesDetails.styled.js","pages/MoviesDetails/MoviesDetails.jsx","services/API.js","utils/imageHref.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: grid;\n  gap: 15px;\n  position: relative;\n\n  a {\n    &:hover,\n    &:focus {\n      background-color: #d3d5ff40;\n      border-radius: 10px;\n      box-shadow: 3px 0 3px grey;\n    }\n  }\n\n  .backLink {\n    position: fixed;\n    z-index: 1;\n    top: 10px;\n    right: 10px;\n    padding: 10px;\n    display: flex;\n    justify-content: center;\n    text-align: end;\n    align-items: center;\n    gap: 20px;\n\n    font-size: 20px;\n    border: 2px solid #d3d5ff40;\n    border-radius: 10px;\n    color: white;\n\n    &:hover,\n    &:focus {\n      background-color: rgba(103, 102, 105, 100%);\n    }\n  }\n\n  img {\n    max-width: 300px;\n  }\n\n  .movie-details {\n    display: flex;\n    justify-content: space-between;\n    gap: 15px;\n\n    h2 {\n      text-align: center;\n      font-size: 50px;\n    }\n  }\n\n  .details-wrapper {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: flex-start;\n\n    .info-title {\n      font-size: 18px;\n      font-weight: 700;\n    }\n\n    .genres {\n      text-decoration: none;\n    }\n  }\n\n  .links {\n    display: flex;\n    justify-content: space-around;\n    margin-top: 15px;\n\n    & a {\n      padding: 10px;\n      color: blue;\n      text-decoration: underline;\n\n      &.active {\n        color: red;\n      }\n    }\n  }\n`;\n","import {\n  useParams,\n  Outlet,\n  useLocation,\n  NavLink,\n  Link,\n} from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { getMovieById } from 'services/API';\nimport { imgSRC } from 'utils/imageHref';\nimport { Div } from './MoviesDetails.styled.js';\n\nconst MoviesDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieById(movieId).then(({ data }) => {\n      setMovie(data);\n    });\n  }, [movieId]);\n\n  const { title, poster_path, genres, release_date, overview, vote_average } =\n    movie;\n  const releasedYear = new Date(release_date).getFullYear();\n\n  return (\n    <Div>\n      <Link to={location.state?.from} className=\"backLink\">\n        â—„ Go back\n      </Link>\n\n      <div className=\"movie-details\">\n        <img src={imgSRC(poster_path)} alt={title} />\n        <div className=\"details-wrapper\">\n          <h2>\n            {title} ({releasedYear})\n          </h2>\n          <p className=\"overview\">{overview}</p>\n          {release_date ? (\n            <p className=\"info-title\">User Score: {vote_average}</p>\n          ) : null}\n\n          {genres?.length ? (\n            <div>\n              <p className=\"info-title\">Genres</p>\n              <ul className=\"genres\">\n                {genres.map(({ id, name }) => {\n                  return (\n                    <li key={id} className=\"genre\">\n                      <p>{name}</p>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          ) : null}\n          <div>\n            <p className=\"info-title\">Additional information</p>\n            <ul className=\"links\">\n              <li>\n                <NavLink\n                  to={'cast'}\n                  state={{ from: location.state?.from }}\n                  className=\"cast\"\n                >\n                  Cast\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to={'reviews'}\n                  state={{ from: location.state?.from }}\n                  className=\"reviews\"\n                >\n                  Reviews\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </Div>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=2d54f3365ed9e7717bfee9cb79f47a9c';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${baseURL}trending/movie/day?${API_KEY}`);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`${baseURL}movie/${id}?${API_KEY}`);\n};\n\nexport const getMovieReviews = id => {\n  return axios.get(`${baseURL}movie/${id}/reviews?${API_KEY}`);\n};\n\nexport const getMovieCast = id => {\n  return axios.get(`${baseURL}movie/${id}/credits?${API_KEY}`);\n};\n\nexport const findMovie = query => {\n  return axios.get(`${baseURL}search/movie?${API_KEY}&query=${query}`);\n};\n","const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport function imgSRC(id) {\n  return id\n    ? `${BASE_URL}${id}`\n    : 'https://www.pngkit.com/png/detail/26-262771_question-mark-pics-question-mark-hand-drawn.png';\n}\n"],"names":["Div","styled","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","getMovieById","then","data","title","poster_path","genres","release_date","overview","vote_average","releasedYear","Date","getFullYear","to","state","from","className","src","imgSRC","alt","length","map","id","name","Suspense","baseURL","API_KEY","getTrendingMovies","axios","getMovieReviews","getMovieCast","findMovie","query"],"sourceRoot":""}