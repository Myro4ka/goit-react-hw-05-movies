{"version":3,"file":"static/js/310.4fc16484.chunk.js","mappings":"8OAEaA,E,OAAMC,GAAAA,IAAH,m1C,kBC6ChB,EAzCe,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAAY,GACrCC,GAAWC,EAAAA,EAAAA,MAiBjB,OATAC,EAAAA,EAAAA,YAAU,WACHJ,IAGLK,EAAAA,EAAAA,IAAUL,GAAOM,MAAK,YAA4B,IAAjBC,EAAgB,EAAxBC,KAAQD,QAC/BX,EAAUW,EACX,GACF,GAAE,CAACP,KAGF,UAACR,EAAD,YACE,kBAAMiB,SAjBW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAASF,EAAEG,OAAOC,SAASC,MAAMC,MACvCjB,EAA2B,KAAXa,EAAgB,CAAEZ,MAAOY,GAAW,CAAC,EACtD,EAaG,WACE,kBAAOK,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,wBAEF,wBACGtB,EAAOwB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMvB,GAA1C,WACE,gBAAKwB,KAAKC,EAAAA,EAAAA,GAAOL,GAAcM,IAAKP,KACpC,wBAAKA,QAHAD,EADC,QAWnB,C,oKC3CKS,EAAU,gCACVC,EAAU,2CAEHC,EAAoB,WAC/B,OAAOC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,8BAA0CC,GAClD,EAEYG,EAAe,SAAAb,GAC1B,OAAOY,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BT,EAA7B,YAAmCU,GAC3C,EAEYI,EAAkB,SAAAd,GAC7B,OAAOY,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BT,EAA7B,oBAA2CU,GACnD,EAEYK,EAAe,SAAAf,GAC1B,OAAOY,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA6BT,EAA7B,oBAA2CU,GACnD,EAEYzB,EAAY,SAAAL,GACvB,OAAOgC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wBAAoCC,EAApC,kBAAqD9B,GAC7D,C,sDCrBM,SAAS2B,EAAOP,GACrB,OAAOA,EAAE,UAHM,mCAGN,OACSA,GACd,6FACL,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/API.js","utils/imageHref.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  color: #fff;\n\n  form {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 300px;\n    margin-bottom: 10px;\n  }\n\n  input {\n    width: 80%;\n    height: 45px;\n    padding: 7px;\n\n    color: black;\n    font-size: 17px;\n    background-color: #b6baff14;\n    border-top-left-radius: 10px;\n    border-bottom-left-radius: 10px;\n    border: 2px solid black;\n    border-right: none;\n\n    &:hover,\n    &:focus {\n      background-color: #d3d5ff40;\n    }\n  }\n\n  button {\n    width: 20%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 15px;\n\n    background-color: lightgrey;\n    border-top-right-radius: 10px;\n    border-bottom-right-radius: 10px;\n    border-bottom-left-radius: none;\n    border-top-left-radius: none;\n    border: none;\n\n    &:hover {\n      cursor: pointer;\n      background-color: grey;\n      font-weight: 600;\n      color: white;\n    }\n  }\n\n  ul {\n    display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  grid-gap: 15px;\n\n  li {\n    text-align: center;\n  }\n\n  img {\n    border: 2px solid lightgrey;\n  }\n\n  h3 {\n    margin-top: 15px;\n    color: black;\n    text-shadow: 5px 5px 5px grey;\n  }\n`;\n","import { findMovie } from 'services/API';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Div } from './Movies.styled';\nimport { imgSRC } from 'utils/imageHref';\n\nconst Movies = () => {\n  const [result, setResult] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const query = searchParams.get('query') || '';\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const search = e.target.elements.movie.value;\n    setSearchParams(search !== '' ? { query: search } : {});\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    findMovie(query).then(({ data: { results } }) => {\n      setResult(results);\n    });\n  }, [query]);\n\n  return (\n    <Div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"movie\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {result.map(({ id, title, poster_path }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img src={imgSRC(poster_path)} alt={title} />\n              <h3>{title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'api_key=2d54f3365ed9e7717bfee9cb79f47a9c';\n\nexport const getTrendingMovies = () => {\n  return axios.get(`${baseURL}trending/movie/day?${API_KEY}`);\n};\n\nexport const getMovieById = id => {\n  return axios.get(`${baseURL}movie/${id}?${API_KEY}`);\n};\n\nexport const getMovieReviews = id => {\n  return axios.get(`${baseURL}movie/${id}/reviews?${API_KEY}`);\n};\n\nexport const getMovieCast = id => {\n  return axios.get(`${baseURL}movie/${id}/credits?${API_KEY}`);\n};\n\nexport const findMovie = query => {\n  return axios.get(`${baseURL}search/movie?${API_KEY}&query=${query}`);\n};\n","const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport function imgSRC(id) {\n  return id\n    ? `${BASE_URL}${id}`\n    : 'https://www.pngkit.com/png/detail/26-262771_question-mark-pics-question-mark-hand-drawn.png';\n}\n"],"names":["Div","styled","useState","result","setResult","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","findMovie","then","results","data","onSubmit","e","preventDefault","search","target","elements","movie","value","type","name","map","id","title","poster_path","to","state","from","src","imgSRC","alt","baseURL","API_KEY","getTrendingMovies","axios","getMovieById","getMovieReviews","getMovieCast"],"sourceRoot":""}